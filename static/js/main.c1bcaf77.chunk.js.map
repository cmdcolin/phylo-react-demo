{"version":3,"sources":["../../src/tree/dist/Tree.js","../../src/tree/dist/newick.js","../../src/tree/dist/Utils.js","../../src/tree/dist/MSA.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["maxLength","d","data","length","children","d3","Tree","props","clickName","getConfig","showBranchLength","ref","useRef","tree","s","ancestors","tokens","split","i","token","subtree","branchset","push","pop","x","name","parseFloat","parseNewick","width","window","innerWidth","leafNodes","CountLeafNodes","map","child","reduce","a","b","useEffect","cluster","size","separation","root","sum","sort","value","setBrLength","y0","k","radius","Math","max","forEach","current","innerHTML","svg","linkStep","sx","sy","tx","ty","mouseovered","active","this","classed","append","attr","selectAll","links","join","source","target","y","filter","enter","each","linkExtensionNode","leaves","text","replace","on","treeheight","storechFn","leafdata","prepareConfig","React","createElement","height","dangerouslySetInnerHTML","__html","propTypes","PropTypes","string","func","getChildLoc","ChangebranchLengthID","defaultProps","colorScheme","clustal","G","P","S","T","H","K","R","F","W","Y","I","L","M","V","lesk","A","C","N","Q","D","E","maeditor","cinema","B","Z","X","MSA","dataToShow","heigtoftree","bgColor","seqMap","seq","Map","line","t","get","set","slice","parseFastaSeq","remove","stri","style","id","array","number","bool","App","useState","setTree","error","setError","loading","setLoading","setShowBranchLength","geneId","setGeneId","className","onSubmit","event","preventDefault","fetch","result","ok","statusText","console","log","undefined","onChange","type","checked","color","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c1bcaf77.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport parseNewick from './newick';\nexport function CountLeafNodes(tree) {\n  if (tree.branchset) {\n    return tree.branchset.map(child => {\n      return CountLeafNodes(child);\n    }).reduce((a, b) => a + b);\n  } else {\n    return 1;\n  }\n}\n\nfunction maxLength(d) {\n  return d.data.length + (d.children ? d3.max(d.children, maxLength) : 0);\n}\n\nfunction setBrLength(d, y0, k) {\n  d.radius = (y0 += Math.max(d.data.length, 0)) * k;\n\n  if (d.children) {\n    d.children.forEach(function (d) {\n      setBrLength(d, y0, k);\n    });\n  }\n}\n\nfunction prepareConfig(root, treeheight, storechFn) {\n  const data = {};\n  const leafdata = [];\n  root.leaves().forEach(d => {\n    leafdata.push({\n      name: d.data.name,\n      x: d.x,\n      y: d.y\n    });\n  });\n  data['leafloc'] = leafdata;\n  data['treeheight'] = treeheight;\n  storechFn(data);\n}\n\nexport default function Tree(props) {\n  const {\n    data,\n    clickName,\n    getConfig = () => {},\n    showBranchLength\n  } = props;\n  const ref = useRef();\n  const tree = parseNewick(data);\n  const width = window.innerWidth / 2 - 240;\n  const leafNodes = CountLeafNodes(tree);\n  useEffect(() => {\n    const cluster = d3.cluster().size([leafNodes * 20, width]).separation((a, b) => 1);\n    const root = d3.hierarchy(tree, d => d.branchset).sum(d => d.branchset ? 0 : 1).sort((a, b) => a.value - b.value || d3.ascending(a.data.length, b.data.length));\n    cluster(root);\n    setBrLength(root, root.data.length = 0, width / maxLength(root));\n    ref.current.innerHTML = '';\n    const svg = d3.select(ref.current);\n    svg.append('g').attr('fill', 'none').attr('stroke', '#000').selectAll('path').data(root.links()).join('path').attr('d', showBranchLength ? linkVariable : linkConstant);\n    svg.append('g').attr('fill', 'none').attr('stroke', '#000').attr('stroke-opacity', '0.2').selectAll('path').data(root.links().filter(function (d) {\n      return !d.target.children;\n    })).enter().append('path').each(function (d) {\n      d.target.linkExtensionNode = this;\n    }).attr('d', showBranchLength ? linkExtensionVariable : linkExtensionConstant);\n    svg.append('g').selectAll('text').data(root.leaves()).join('text').attr('x', d => d.y + 5).attr('y', d => d.x + 4).text(d => (d.data.name || '').replace(/_/g, ' ')).on('mouseover', mouseovered(true)).on('mouseout', mouseovered(false)).on('click', d => {\n      clickName(d);\n    });\n\n    function linkVariable(d) {\n      return linkStep(d.source.x, d.source.radius, d.target.x, d.target.radius);\n    }\n\n    function linkConstant(d) {\n      return linkStep(d.source.x, d.source.y, d.target.x, d.target.y);\n    }\n\n    function linkExtensionVariable(d) {\n      return linkStep(d.target.x, d.target.radius, d.target.x, d.target.y);\n    }\n\n    function linkExtensionConstant(d) {\n      return linkStep(d.target.x, d.target.y, d.target.x, d.target.y);\n    }\n\n    function linkStep(sx, sy, tx, ty) {\n      return `M${sy} ${sx}V${tx}H${ty}`;\n    }\n\n    function mouseovered(active) {\n      return function (d) {\n        d3.select(this).classed('label--active', active);\n      };\n    }\n\n    prepareConfig(root, leafNodes * 20, getConfig);\n  }, [data, clickName, getConfig, showBranchLength, width, leafNodes, tree]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: width + 210,\n    height: leafNodes * 20\n  }, /*#__PURE__*/React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n            .link--active {\n                stroke: #000 !important;\n                stroke-width: 1.5px;\n            }\n            .label--active {\n                font-weight: bold;\n            }`\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    ref: ref\n  }));\n}\nTree.propTypes = {\n  data: PropTypes.string,\n  clickName: PropTypes.func,\n  getChildLoc: PropTypes.func,\n  ChangebranchLengthID: PropTypes.string\n};\nTree.defaultProps = {\n  data: '',\n  clickName: null,\n  getChildLoc: null,\n  ChangebranchLengthID: 'notpossible'\n};","/**\n * Newick format parser in JavaScript.\n *\n * Copyright (c) Jason Davies 2010.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Example tree (from http://en.wikipedia.org/wiki/Newick_format):\n *\n * +--0.1--A\n * F-----0.2-----B            +-------0.3----C\n * +------------------0.5-----E\n *                            +---------0.4------D\n *\n * Newick format:\n * (A:0.1,B:0.2,(C:0.3,D:0.4)E:0.5)F;\n *\n * Converted to JSON:\n * {\n *   name: \"F\",\n *   branchset: [\n *     {name: \"A\", length: 0.1},\n *     {name: \"B\", length: 0.2},\n *     {\n *       name: \"E\",\n *       length: 0.5,\n *       branchset: [\n *         {name: \"C\", length: 0.3},\n *         {name: \"D\", length: 0.4}\n *       ]\n *     }\n *   ]\n * }\n *\n * Converted to JSON, but with no names or lengths:\n * {\n *   branchset: [\n *     {}, {}, {\n *       branchset: [{}, {}]\n *     }\n *   ]\n * }\n */\nexport default function parse(s) {\n  const ancestors = [];\n  let tree = {};\n  const tokens = s.split(/\\s*(;|\\(|\\)|,|:)\\s*/);\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const subtree = {};\n\n    switch (token) {\n      case '(':\n        // new branchset\n        tree.branchset = [subtree];\n        ancestors.push(tree);\n        tree = subtree;\n        break;\n\n      case ',':\n        // another branch\n        ancestors[ancestors.length - 1].branchset.push(subtree);\n        tree = subtree;\n        break;\n\n      case ')':\n        // optional name next\n        tree = ancestors.pop();\n        break;\n\n      case ':':\n        // optional length next\n        break;\n\n      default:\n        const x = tokens[i - 1];\n\n        if (x === ')' || x === '(' || x === ',') {\n          tree.name = token;\n        } else if (x === ':') {\n          tree.length = parseFloat(token);\n        }\n\n    }\n  }\n\n  return tree;\n}","export async function* makeTextFileLineIterator(fileURL) {\n  const utf8Decoder = new TextDecoder('utf-8');\n  const response = await fetch(fileURL);\n  const reader = response.body.getReader();\n  let {\n    value: chunk,\n    done: readerDone\n  } = await reader.read();\n  chunk = chunk ? utf8Decoder.decode(chunk) : '';\n  const re = /\\n|\\r|\\r\\n/gm;\n  let startIndex = 0;\n\n  for (;;) {\n    const result = re.exec(chunk);\n\n    if (!result) {\n      if (readerDone) {\n        break;\n      }\n\n      const remainder = chunk.substr(startIndex);\n      ({\n        value: chunk,\n        done: readerDone\n      } = await reader.read());\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '');\n      startIndex = re.lastIndex = 0;\n      continue;\n    }\n\n    yield chunk.substring(startIndex, result.index);\n    startIndex = re.lastIndex;\n  }\n\n  if (startIndex < chunk.length) {\n    // last line didn't end in a newline char\n    yield chunk.substr(startIndex);\n  }\n}\nexport function parseFastaSeq(text) {\n  const seq = new Map();\n  text.split('\\n').forEach(line => {\n    if (line[0] !== '#') {\n      const t = line.split(' ');\n\n      if (seq.get(t[0])) {\n        seq.set(t[0], seq.get(t[0]) + t.slice(-1)[0]);\n      } else {\n        seq.set(t[0], t.slice(-1)[0]);\n      }\n    }\n  });\n  return seq;\n}\nconst lilac = '#C8A2C8'; // nonstandard\n\nexport const colorScheme = {\n  clustal: {\n    G: 'orange',\n    P: 'orange',\n    S: 'orange',\n    T: 'orange',\n    H: 'red',\n    K: 'red',\n    R: 'red',\n    F: 'blue',\n    W: 'blue',\n    Y: 'blue',\n    I: 'green',\n    L: 'green',\n    M: 'green',\n    V: 'green'\n  },\n  lesk: {\n    G: 'orange',\n    A: 'orange',\n    S: 'orange',\n    T: 'orange',\n    C: 'green',\n    V: 'green',\n    I: 'green',\n    L: 'green',\n    P: 'green',\n    F: 'green',\n    Y: 'green',\n    M: 'green',\n    W: 'green',\n    N: 'magenta',\n    Q: 'magenta',\n    H: 'magenta',\n    D: 'red',\n    E: 'red',\n    K: 'blue',\n    R: 'blue'\n  },\n  maeditor: {\n    A: 'lightgreen',\n    G: 'lightgreen',\n    C: 'green',\n    D: 'darkgreen',\n    E: 'darkgreen',\n    N: 'darkgreen',\n    Q: 'darkgreen',\n    I: 'blue',\n    L: 'blue',\n    M: 'blue',\n    V: 'blue',\n    F: lilac,\n    W: lilac,\n    Y: lilac,\n    H: 'darkblue',\n    K: 'orange',\n    R: 'orange',\n    P: 'pink',\n    S: 'red',\n    T: 'red'\n  },\n  cinema: {\n    H: 'blue',\n    K: 'blue',\n    R: 'blue',\n    D: 'red',\n    E: 'red',\n    S: 'green',\n    T: 'green',\n    N: 'green',\n    Q: 'green',\n    A: 'white',\n    V: 'white',\n    L: 'white',\n    I: 'white',\n    M: 'white',\n    F: 'magenta',\n    W: 'magenta',\n    Y: 'magenta',\n    P: 'brown',\n    G: 'brown',\n    C: 'yellow',\n    B: 'gray',\n    Z: 'gray',\n    X: 'gray',\n    '-': 'white',\n    '.': 'white'\n  }\n};","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { colorScheme, parseFastaSeq } from './Utils';\nexport function calcWidth(stri) {\n  return stri.length * 16 + 10;\n}\nexport default function MSA(props) {\n  const {\n    dataToShow,\n    data,\n    heigtoftree,\n    bgColor\n  } = props;\n  useEffect(() => {\n    const seqMap = parseFastaSeq(data);\n    d3.selectAll('#metadata > *').remove();\n    const svg = d3.select('#metadata').attr('width', 1000) //childLoc.length > 0 ? calcWidth(seq.get(childLoc[0].name)) : 0\n    .attr('height', heigtoftree) //leafNode from tree.js\n    .attr('font-family', 'sans-serif').attr('font-size', 10);\n    dataToShow.forEach(d => {\n      const x = d.x;\n      const stri = seqMap.get(d.name) ? seqMap.get(d.name) : '';\n\n      for (let i = 0; i < stri.length; i++) {\n        if (bgColor) {\n          svg.append('rect').attr('x', 10 + i * 16).attr('y', x - 10).attr('width', 16).attr('height', 20).style('fill', colorScheme.maeditor[stri[i]]);\n          svg.append('text').style('font-family', 'monospace').attr('x', 10 + i * 16 + 8 - 3).attr('y', x + 4).style('fill', 'white').text(stri[i]);\n        } else {\n          svg.append('text').style('font-family', 'monospace').attr('x', 10 + i * 16 + 8 - 3).attr('y', x + 4).style('fill', colorScheme.maeditor[stri[i]]).text(stri[i]);\n        }\n      }\n    });\n  }, [dataToShow, heigtoftree, data, bgColor]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"metadata\"\n  });\n}\nMSA.propTypes = {\n  data: PropTypes.string,\n  dataToShow: PropTypes.array,\n  heigtoftree: PropTypes.number,\n  bgColor: PropTypes.bool\n};\nMSA.defaultProps = {\n  data: '',\n  dataToShow: null,\n  heigtoftree: null,\n  bgColor: false\n};","import React, { useState } from 'react'\nimport { Tree } from 'phylo-react'\nimport './App.css'\n\nfunction App() {\n  const [tree, setTree] = useState()\n  const [error, setError] = useState()\n  const [loading, setLoading] = useState()\n  const [showBranchLength, setShowBranchLength] = useState(true)\n  const [geneId, setGeneId] = useState('ENSGT00390000003602')\n  return (\n    <div className=\"App\">\n      <form\n        onSubmit={async event => {\n          event.preventDefault()\n          setLoading(true)\n          const result = await fetch(\n            `https://rest.ensembl.org/genetree/id/${geneId}?content-type=text/x-nh;nh_format=simple`,\n          )\n          if (!result.ok) {\n            setError(result.statusText)\n            setLoading(false)\n            return\n          }\n          const text = await result.text()\n          setTree(text)\n          console.log({ text })\n          setError(undefined)\n          setLoading(false)\n        }}\n      >\n        <label>\n          Enter Ensembl gene ID\n          <input\n            id=\"geneid\"\n            value={geneId}\n            onChange={event => setGeneId(event.target.value)}\n            type=\"text\"\n          />\n        </label>\n        <label>\n          Show branch length\n          <input\n            type=\"checkbox\"\n            checked={showBranchLength}\n            onChange={event => {\n              setShowBranchLength(event.target.checked)\n            }}\n          />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {loading ? <p>Loading...</p> : null}\n      {error ? <p style={{ color: 'red' }}>{error}</p> : null}\n      {tree ? <Tree data={tree} showBranchLength={showBranchLength} /> : null}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}